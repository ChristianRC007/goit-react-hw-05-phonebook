{"version":3,"sources":["components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","handleInputChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","contacts","onDeleteContact","TransitionGroup","component","map","id","CSSTransition","timeout","classNames","unmountOnExit","onClick","height","viewBox","width","d","Filter","isAppeared","in","Notification","isExist","App","filter","addContact","contact","uuid","find","prevState","deleteContact","contactId","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","timer","setTimeout","clearTimeout","normalizedContact","toLowerCase","filteredContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0332a7ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Name</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Number</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className=\"form__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"dub\" unmountOnExit>\r\n          <li className=\"contact-list__item\" key={id}>\r\n            <p className=\"contact-list__item__name\">{name}</p>\r\n            <p className=\"contact-list__item__number\">{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              <svg\r\n                height=\"365.696pt\"\r\n                viewBox=\"0 0 365.696 365.696\"\r\n                width=\"365.696pt\"\r\n              >\r\n                <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange, isAppeared }) => {\r\n  return (\r\n    <CSSTransition in={isAppeared} timeout={200} classNames=\"pop\" unmountOnExit>\r\n      <label className=\"filter\">\r\n        <span>Find contacts by name</span>\r\n        <input\r\n          className=\"filter__input\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ isExist }) => {\r\n  return (\r\n    <CSSTransition in={isExist} timeout={250} classNames=\"fade\" unmountOnExit>\r\n      <div className=\"notification\">\r\n        <p>This contact is already exist!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport { v4 as uuid } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isExist: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    if (this.state.isExist !== prevState.isExist) {\n      const timer = setTimeout(() => {\n        this.setState({ isExist: false });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = { id: uuid(), name, number };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      this.setState({ isExist: true });\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const normalizedContact = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContact),\n    );\n\n    return (\n      <Container>\n        <h1 className=\"title\">Phonebook</h1>\n        <Notification isExist={this.state.isExist} />\n\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n\n        <Filter\n          value={filter}\n          onChange={this.changeFilter}\n          isAppeared={this.state.contacts.length > 1}\n        />\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}